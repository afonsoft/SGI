
DROP TABLE IF EXISTS `SGI_AUX_Acabamentos`;
CREATE TABLE SGI_AUX_Acabamentos
  (
     `COD_ACABAMENTO` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`      VARCHAR(40) NOT NULL DEFAULT '',
     `ATIVO`          TINYINT NOT NULL,
     PRIMARY KEY (`COD_ACABAMENTO`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Caracteristicas`;
CREATE TABLE SGI_AUX_Caracteristicas
  (
     `COD_CARACTERISTICA` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`          VARCHAR(40) NOT NULL DEFAULT '',
     `ATIVO`              TINYINT NOT NULL,
     PRIMARY KEY (`COD_CARACTERISTICA`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Caracteristicas_Predio_Casa`;
CREATE TABLE SGI_AUX_Caracteristicas_Predio_Casa
  (
     `COD_PREDIO_CASA` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`       VARCHAR(40) NOT NULL DEFAULT '',
     `ATIVO`           TINYINT NOT NULL,
     PRIMARY KEY (`COD_PREDIO_CASA`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Conservacao`;
CREATE TABLE SGI_AUX_Conservacao
  (
     `COD_CONSERVACAO` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`       VARCHAR(30) NOT NULL DEFAULT '',
     `ATIVO`           TINYINT NOT NULL,
     PRIMARY KEY (`COD_CONSERVACAO`)
  );

DROP TABLE IF EXISTS `SGI_Imovel_Motivo_Venda`;
CREATE TABLE SGI_Imovel_Motivo_Venda
  (
     `COD_MOTIVO_VENDA` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`        VARCHAR(45) NOT NULL DEFAULT '',
     `ATIVO`            TINYINT NOT NULL,
     PRIMARY KEY (`COD_MOTIVO_VENDA`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Tipo`;
CREATE TABLE SGI_AUX_Tipo
  (
     `COD_TIPO`  BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(45) NOT NULL DEFAULT '',
     `ATIVO`     INT NOT NULL,
     PRIMARY KEY (`COD_TIPO`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Posicao`;
CREATE TABLE SGI_AUX_Posicao
  (
     `COD_POSICAO` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`   VARCHAR(45) NOT NULL DEFAULT '',
     `ATIVO`       TINYINT NOT NULL,
     PRIMARY KEY (`COD_POSICAO`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Sub_Tipo`;
CREATE TABLE SGI_AUX_Sub_Tipo
  (
     `COD_SUB_TIPO` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`    VARCHAR(45) NOT NULL DEFAULT '',
     `ORDEM`        INT NOT NULL,
     `TIPO`         BIGINT NOT NULL,
     `ATIVO`        TINYINT NOT NULL,
     PRIMARY KEY (`COD_SUB_TIPO`)
  );

DROP TABLE IF EXISTS `SGI_AUX_Composicao`;
CREATE TABLE SGI_AUX_Composicao
  (
     `COD_COMPOSICAO` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`      VARCHAR(45) NOT NULL DEFAULT '',
     `ORDEM`          INT NOT NULL,
     `ATIVO`          TINYINT NOT NULL,
     `TIPO`           BIGINT NOT NULL,
     PRIMARY KEY (`COD_COMPOSICAO`)
  );

CREATE INDEX FBK_SGI_AUX_Composicao_Imovel_AUX
  ON SGI_AUX_Composicao (`ORDEM`, `ATIVO`);

DROP TABLE IF EXISTS `SGI_Imovel`;
CREATE TABLE SGI_Imovel
  (
     `COD_IMOVEL`            BIGINT AUTO_INCREMENT NOT NULL,
     `COD_POSICAO`           BIGINT NOT NULL,
     `COD_TIPO`              BIGINT NOT NULL,
     `COD_ORIGEM`            BIGINT NOT NULL,
     `DATA_CADASTRO`         DATETIME NOT NULL,
     `VALIDACAO`             VARCHAR(10) NOT NULL DEFAULT 'AAA',
     `COD_UNIDADE`           BIGINT NOT NULL,
     `PUBLICAR`              TINYINT NOT NULL DEFAULT '1',
     `REFERENCIA`            VARCHAR(20) NOT NULL DEFAULT 'REF',
     `REF_ALTERNATIVA`       VARCHAR(20) NULL,
     `STATUS`                TINYINT NOT NULL,
     `FINALIDADE`            VARCHAR(16) NOT NULL DEFAULT '0000000000000000',
     `LOGRADOURO`            VARCHAR(150) NULL,
     `NUMERO`                VARCHAR(10) NULL,
     `APTO`                  VARCHAR(50) NULL,
     `EDIFICIO`              VARCHAR(50) NULL,
     `BLOCO`                 VARCHAR(18) NULL,
     `BAIRRO`                VARCHAR(100) NULL,
     `CIDADE`                VARCHAR(150) NULL,
     `UF`                    VARCHAR(150) NULL,
     `CEP`                   VARCHAR(11) NULL,
     `PAVIMENTO`             VARCHAR(18) NULL,
     `REGIAO`                VARCHAR(50) NULL,
     `PONTO_REFERENCIA`      VARCHAR(150) NULL,
     `ANO_CONSTRUCAO`        VARCHAR(4) NOT NULL DEFAULT '0000',
     `VALOR_VENDA`           DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_LOCACAO`         DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_IPTU`            DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_CONDOMINIO`      DOUBLE NOT NULL DEFAULT '0.00',
     `ENTREGA_OBRA`          VARCHAR(7) NOT NULL DEFAULT '0000-00',
     `LOCAL_CHAVES`          VARCHAR(100) NULL,
     `LANCAMENTO`            TINYINT NOT NULL,
     `PRE_LANCAMENTO`        TINYINT NOT NULL,
     `EM_OBRAS`              TINYINT NOT NULL,
     `PRONTO_MORAR`          TINYINT NOT NULL,
     `ESCRITURADO`           TINYINT NOT NULL,
     `REGISTRADO_CARTORIO`   TINYINT NOT NULL,
     `NOME_CARTORIO`         VARCHAR(35) NULL,
     `MATRICULA_CARTORIO`    VARCHAR(35) NULL,
     `AVERBACAO`             VARCHAR(50) NULL,
     `FALTA_AVERBACAO`       TINYINT NOT NULL,
     `INVENTARIO`            TINYINT NOT NULL,
     `USOCAPIAO`             TINYINT NOT NULL,
     `CONTRATO`              TINYINT NOT NULL,
     `LAUDEMIO`              TINYINT NOT NULL,
     `LANCTO_IPTU`           VARCHAR(30) NULL,
     `ENERGIA`               VARCHAR(35) NULL,
     `GAS`                   VARCHAR(35) NULL,
     `AGUA`                  VARCHAR(35) NULL,
     `DIMENSAO_LADO_1`       DOUBLE NOT NULL DEFAULT '0.00',
     `DIMENSAO_LADO_2`       DOUBLE NOT NULL DEFAULT '0.00',
     `AREA_UTIL`             DOUBLE NOT NULL DEFAULT '0.00',
     `AREA_TOTAL`            DOUBLE NOT NULL DEFAULT '0.00',
     `TIROU_FOTOS`           TINYINT NOT NULL,
     `COLOCOU_PLACA`         TINYINT NOT NULL,
     `INDICADOR`             VARCHAR(40) NULL,
     `OUTROS_CONTATOS`       LONGTEXT,
     `ORIGEM_CONTATO`        BIGINT  NOT NULL,
     `MOTIVO_VENDA`          BIGINT NOT NULL,
     `REGIAO_CONTATO`        VARCHAR(45) NULL,
     `CIDADE_CONTATO`        VARCHAR(45) NULL,
     `CONTATO_INTERIOR`      INT  NOT NULL,
     `CONTATO_CAPITAL`       INT NOT NULL,
     `CONTATO_LITORAL`       INT NOT NULL,
     `NUMERO_MAXIMO_PESSOAS` INT NOT NULL,
     `USUARIO`               BIGINT NOT NULL,
     `ALTERADO`              DATETIME NULL,
     `QTD_FOTOS`             INT NOT NULL,
     `SGI_REVENDA`           TINYINT NOT NULL,
     `SGI_LANCTO`            TINYINT NOT NULL,
     `REF_MIGRACAO`          VARCHAR(30) NULL,
     PRIMARY KEY (`COD_IMOVEL`),
     CONSTRAINT `SGI_Imovel_IMOVEL` UNIQUE (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`),
     CONSTRAINT `SGI_Imovel_POSICAO` FOREIGN KEY (`COD_POSICAO`) REFERENCES SGI_AUX_POSICAO (`COD_POSICAO`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_TIPO` FOREIGN KEY (`COD_TIPO`) REFERENCES SGI_AUX_TIPO (`COD_TIPO`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX SGI_Imovel_IMOVEL2
  ON SGI_Imovel (`REFERENCIA`);

CREATE INDEX SGI_Imovel_UNIDADE
  ON SGI_Imovel (`COD_UNIDADE`);

CREATE INDEX SGI_Imovel_VALIDACAO
  ON SGI_Imovel (`VALIDACAO`);

DROP TABLE IF EXISTS `SGI_Imovel_Composicao`;
CREATE TABLE SGI_Imovel_Composicao
  (
     `ID`             BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`     BIGINT NOT NULL,
     `COD_COMPOSICAO` BIGINT NOT NULL,
	 `QUANTIDADE`	  INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Composicao_COMPOSICAO` FOREIGN KEY (`COD_COMPOSICAO`) REFERENCES SGI_AUX_Composicao (`COD_COMPOSICAO`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Composicao_IMOVEL` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Sub_Tipo`;
CREATE TABLE SGI_Imovel_Sub_Tipo
  (
     `ID`           BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`   BIGINT NOT NULL,
     `COD_SUB_TIPO` BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Sub_Tipo_COMPOSICAO` FOREIGN KEY (`COD_SUB_TIPO`) REFERENCES SGI_AUX_SUB_TIPO (`COD_SUB_TIPO`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Sub_Tipo_IMOVEL` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Acabamento`;
CREATE TABLE SGI_Imovel_Acabamento
  (
     `ID`             BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`     BIGINT NOT NULL,
     `COD_ACABAMENTO` BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Acabamento_ACABAMENTO` FOREIGN KEY (`COD_ACABAMENTO`) REFERENCES SGI_AUX_Acabamentos (`COD_ACABAMENTO`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Acabamento_IMOVEL` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Caracteristicas`;
CREATE TABLE SGI_Imovel_Caracteristicas
  (
     `ID`                 BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`         BIGINT NOT NULL,
     `COD_CARACTERISTICA` BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Caracteristicas_CARACTERISTICAS` FOREIGN KEY (`COD_CARACTERISTICA`) REFERENCES SGI_AUX_Caracteristicas (`COD_CARACTERISTICA`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Caracteristicas_IMOVEL` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Caracteristicas_Predio_Casa`;
CREATE TABLE SGI_Imovel_Caracteristicas_Predio_Casa
  (
     `ID`              BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`      BIGINT NOT NULL,
     `COD_PREDIO_CASA` BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Caracteristicas_Predio_Casa_PREDIOCASA` FOREIGN KEY (`COD_PREDIO_CASA`) REFERENCES SGI_AUX_Caracteristicas_Predio_Casa (`COD_PREDIO_CASA`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Caracteristicas_Predio_Casa_IMOVEL` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_CRM_Status_Agenda`;
CREATE TABLE SGI_CRM_Status_Agenda
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(150) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_atendimento_encerramento`;
CREATE TABLE SGI_CRM_Atendimento_Encerramento
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(50) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Operadora`;
CREATE TABLE SGI_CRM_operadora
  (
     `COD_OPERADORA` BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO`     VARCHAR(45) NOT NULL DEFAULT '',
     `ATIVO`         TINYINT NOT NULL,
     PRIMARY KEY (`COD_OPERADORA`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Cliente`;
CREATE TABLE SGI_CRM_Cliente
  (
     `COD_CLIENTE`          BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ORIGEM`           BIGINT NOT NULL,
     `COD_UNIDADE`          BIGINT NOT NULL,
     `DATA_CADASTRO`        DATETIME NULL,
     `ALTERADO`             DATETIME NULL,
     `TIPO`                 INT NOT NULL DEFAULT '00',
     `NOME`                 VARCHAR(150) NULL,
     `TELEFONE_RESIDENCIAL` VARCHAR(18) NULL,
     `CELULAR`              VARCHAR(18) NULL,
     `COD_OPERADORA`        INT NOT NULL,
     `TEL_COMERCIAL`        VARCHAR(18) NULL,
     `NEXTEL_ID`            VARCHAR(25) NULL,
     `EMAIL`                VARCHAR(150) NULL,
     `INVESTIDOR`           TINYINT NOT NULL,
     `COMPROU_ANTES`        TINYINT NOT NULL,
     `OBS`                  LONGTEXT,
     `COD_PESSOA`           INT NOT NULL,
     `EXPECTATIVA`          INT NOT NULL,
     `RECADO_CORRETOR`      LONGTEXT,
     `CONTATO_ORIGEM`       INT NOT NULL,
     `MOTIVO_COMPRA`        INT NOT NULL,
     `REGIAO`               VARCHAR(150) NULL,
     `CIDADE`               VARCHAR(150) NULL,
     `INTERIOR`             TINYINT NOT NULL,
     `CAPITAL`              TINYINT NOT NULL,
     `LITORAL`              TINYINT NOT NULL,
     `PROCURA_COMPRAR`      TINYINT NOT NULL,
     `PROCURA_ALUGAR`       TINYINT NOT NULL,
     `PROCURA_TEMPORADA`    TINYINT NOT NULL,
     `TIPO_IMOVEL`          INT NOT NULL,
     `IMOVEL_CIDADE`        VARCHAR(150) NULL,
     `IMOVEL_BAIRRO`        VARCHAR(150) NULL,
     `IMOVEL_DORMS`         INT NOT NULL DEFAULT '00',
     `IMOVEL_SUITES`        INT  NOT NULL DEFAULT '00',
     `IMOVEL_VAGAS`         INT NOT NULL DEFAULT '00',
     `VALOR_MAXIMO`         DOUBLE NOT NULL DEFAULT '0.00',
     `AREA_UTIL_MINIMA`     DOUBLE NOT NULL DEFAULT '0.00',
     `IMOVEL_RUAS`          LONGTEXT,
     `IMOVEL_EDIFICIO`      LONGTEXT,
     `DESEJA_FINANCIAR`     TINYINT NOT NULL,
     `DESEJA_LANCAMENTO`    TINYINT NOT NULL,
     `VALOR_MAX_ENTRADA`    DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_MAX_CONDOMINIO` DOUBLE NOT NULL DEFAULT '0.00',
     `ANO_ENTREGA_OBRA`     VARCHAR(7) NOT NULL DEFAULT 'ESCOLHA',
     `MES_ENTREGA_OBRA`     VARCHAR(20) NULL,
     `RADAR`                INT NOT NULL,
     PRIMARY KEY (`COD_CLIENTE`),
     CONSTRAINT `SGI_CRM_Cliente_MAIL` UNIQUE (`EMAIL`, `NOME`),
     CONSTRAINT `SGI_CRM_Cliente_CLIENTE` UNIQUE (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Atendimento`;
CREATE TABLE SGI_CRM_Atendimento
  (
     `COD_ATENDIMENTO` BIGINT AUTO_INCREMENT NOT NULL,
     `DATA_INICIO`     DATETIME NOT NULL,
     `DATA_FINAL`      DATETIME NOT NULL,
     `COD_CLIENTE`     BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `ATENDENTE`       BIGINT NOT NULL,
     `STATUS`          TINYINT NOT NULL,
     `ENCERRAMENTO`    TINYINT NOT NULL,
     PRIMARY KEY (COD_ATENDIMENTO),
     CONSTRAINT `SGI_CRM_Atendimento_ATENDIMENTO` UNIQUE (COD_ATENDIMENTO, `COD_ORIGEM`, `COD_UNIDADE`),
     CONSTRAINT `SGI_CRM_Atendimento_CLIENTE` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX CLIENTE
  ON SGI_CRM_atendimento (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Atendimento_Historico`;
CREATE TABLE SGI_CRM_Atendimento_Historico
  (
     `ID`             BIGINT AUTO_INCREMENT NOT NULL,
     COD_ATENDIMENTO  BIGINT NOT NULL,
     `COD_ORIGEM`     BIGINT NOT NULL,
     `COD_UNIDADE`    BIGINT NOT NULL,
     `DATA_INTERACAO` DATETIME NOT NULL,
     `ATENDENTE`      BIGINT NOT NULL,
     `DESCRICAO`      LONGTEXT,
     `STATUS`         TINYINT NOT NULL,
     `COD_CONTATO`    INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_ATENDIMENTO_HISTORICO` FOREIGN KEY (COD_ATENDIMENTO, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Atendimento (COD_ATENDIMENTO, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX ATENDIMENTO
  ON SGI_CRM_atendimento_historico (COD_ATENDIMENTO, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Agenda`;
CREATE TABLE SGI_CRM_Agenda
  (
     `ID`              BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ATENDIMENTO` BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `DATA`            DATETIME NOT NULL,
     `ATENDENTE`       BIGINT NOT NULL,
     `DATA_RETORNO`    DATETIME NOT NULL,
     `STATUS`          TINYINT NOT NULL,
     `TIPO_RETORNO`    INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_ATENDIMENTO_AGENDA` FOREIGN KEY (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Atendimento (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_CRM_Cliente_Complementar`;
CREATE TABLE SGI_CRM_Cliente_Complementar
  (
     `ID`              BIGINT AUTO_INCREMENT NOT NULL,
     `COD_CLIENTE`     BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `NOME_DOCUMENTO`  VARCHAR(70) NOT NULL DEFAULT '000.000.000-00',
     `VALOR_CODUMENTO` VARCHAR(70) NOT NULL,
     `CNH`             VARCHAR(30) NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_CLIENTE_COMPLEMENTAR` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_CRM_Cliente_Documentos`;
CREATE TABLE SGI_CRM_Cliente_Documentos
  (
     `COD_DOCUMENTO` BIGINT AUTO_INCREMENT NOT NULL,
     `COD_CLIENTE`   BIGINT NOT NULL,
     `COD_ORIGEM`    BIGINT NOT NULL,
     `COD_UNIDADE`   BIGINT NOT NULL,
     `DESCRICAO`     VARCHAR(200) NOT NULL,
     `DATA`          DATETIME NOT NULL,
     `ENVIADO`       TINYINT NOT NULL,
     `ANEXO`         LONGBLOB,
     PRIMARY KEY (`COD_DOCUMENTO`),
     CONSTRAINT `FBK_CLIENTE_DOCUMENTO` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX CLIENTE
  ON SGI_CRM_cliente_documentos (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Cliente_Email`;
CREATE TABLE SGI_CRM_Cliente_Email
  (
     `COD_EMAIL`       BIGINT AUTO_INCREMENT NOT NULL,
     `COD_CLIENTE`     BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `COD_ATENDIMENTO` BIGINT NOT NULL,
     `DATA_ENVIO`      DATETIME NOT NULL,
     `PARA`            VARCHAR(155) NULL,
     `ASSUNTO`         VARCHAR(255) NULL,
     `CORPO`           LONGTEXT,
     PRIMARY KEY (`COD_EMAIL`),
     CONSTRAINT `FB_CLIENTE_EMAIL` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX ATENDIMENTO
  ON SGI_CRM_cliente_email (`COD_ATENDIMENTO`);

CREATE INDEX CLIENTE
  ON SGI_CRM_cliente_email (`COD_CLIENTE`);

DROP TABLE IF EXISTS `SGI_CRM_Cliente_Imovel`;
CREATE TABLE SGI_CRM_Cliente_Imovel
  (
     `ID`                BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ATENDIMENTO`   BIGINT NOT NULL,
     `COD_ORIGEM`        BIGINT NOT NULL,
     `COD_UNIDADE`       BIGINT NOT NULL,
     `IMOVEL_REFERENCIA` VARCHAR(80) NOT NULL DEFAULT 'REF',
     `COD_IMOVEL`        BIGINT NOT NULL,
     `DATA`              DATETIME NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_CRM_Cliente_Imovel_Imovel_CLIENTES` FOREIGN KEY (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_atendimento (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_CRM_Cliente_Imovel_CLIENTES_Imovel` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX IMOVEL
  ON SGI_CRM_cliente_Imovel (`COD_IMOVEL`);

CREATE INDEX ATENDIMENTO
  ON SGI_CRM_cliente_Imovel (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Cliente_Propostas`;
CREATE TABLE SGI_CRM_Cliente_Propostas
  (
     `COD_PROPOSTA`     BIGINT AUTO_INCREMENT NOT NULL,
     `PROPOSTA_ORIGEM`  BIGINT NOT NULL,
     `PROPOSTA_UNIDADE` BIGINT  NOT NULL,
     `COD_CLIENTE`      BIGINT NOT NULL,
     `COD_ORIGEM`       BIGINT NOT NULL,
     `COD_UNIDADE`      BIGINT NOT NULL,
     `DATA_PROPOSTA`    DATETIME NOT NULL,
     `COD_IMOVEL`       BIGINT NOT NULL,
     `IMOVEL_ORIGEM`    BIGINT NOT NULL,
	 `IMOVEL_UNIDADE`   BIGINT  NOT NULL,
     `QTD_VALIDADE`     INT NOT NULL,
     `DATA_FINALIZADO`  DATETIME NOT NULL,
     `STATUS`           TINYINT NOT NULL,
     PRIMARY KEY (`COD_PROPOSTA`),
     CONSTRAINT `SGI_CRM_Cliente_Propostas_PROPOSTA` UNIQUE (`COD_PROPOSTA`, `PROPOSTA_ORIGEM`, `PROPOSTA_UNIDADE`),
     CONSTRAINT `SGI_CRM_Cliente_Propostas_CLIENTES_PROPOSTAS` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_CRM_Cliente_Propostas_CLIENTES_Imovel` FOREIGN KEY (`COD_IMOVEL`) REFERENCES SGI_Imovel (`COD_IMOVEL`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX IMOVEL
  ON SGI_CRM_cliente_propostas (`COD_IMOVEL`, `IMOVEL_ORIGEM`, `IMOVEL_UNIDADE`);

CREATE INDEX CLIENTE
  ON SGI_CRM_cliente_propostas (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Cliente_propostas_historico`;
CREATE TABLE SGI_CRM_Cliente_Propostas_Historico
  (
     `ID`               BIGINT AUTO_INCREMENT NOT NULL,
     `COD_PROPOSTA`     BIGINT NOT NULL,
     `PROPOSTA_ORIGEM`  BIGINT NOT NULL,
     `PROPOSTA_UNIDADE` BIGINT NOT NULL,
     `DATA`             DATETIME NOT NULL,
     `FILE_NAME`        LONGTEXT,
     `VERSAO`           INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_PROPOSTA_HISTORICO` FOREIGN KEY (`COD_PROPOSTA`, `PROPOSTA_ORIGEM`, `PROPOSTA_UNIDADE`) REFERENCES SGI_CRM_cliente_propostas (`COD_PROPOSTA`, `PROPOSTA_ORIGEM`, `PROPOSTA_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX PROPOSTA
  ON SGI_CRM_cliente_propostas_historico (`COD_PROPOSTA`, `PROPOSTA_ORIGEM`, `PROPOSTA_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_contato`;
CREATE TABLE SGI_CRM_Contato
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(50) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Expectativa`;
CREATE TABLE SGI_CRM_Expectativa
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(45) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_ficha_visita`;
CREATE TABLE SGI_CRM_Ficha_Visita
  (
     `COD_FICHA`       BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ATENDIMENTO` BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `DATA_IMPRESSAO`  DATETIME NULL,
     `DATA_VISITA`     DATETIME NULL,
     `COD_CLIENTE`     BIGINT NOT NULL,
     `CLIENTE_ORIGEM`  BIGINT NOT NULL,
     `CLIENTE_UNIDADE` BIGINT NOT NULL,
     `IMPRESSO`        TINYINT NOT NULL,
     PRIMARY KEY (`COD_FICHA`),
     CONSTRAINT `SGI_CRM_Ficha_Visita_FICHA` UNIQUE (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_FICHA`),
     CONSTRAINT `SGI_CRM_Ficha_Visita_ATENDIMENTO_FICHA` FOREIGN KEY (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Atendimento (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_CRM_ficha_Imovel`;
CREATE TABLE SGI_CRM_Ficha_Imovel
  (
     `ID`              BIGINT AUTO_INCREMENT NOT NULL,
     `COD_FICHA`       BIGINT NOT NULL,
     `COD_ATENDIMENTO` BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `IMOVEL`          VARCHAR(30) DEFAULT 'IMOVEL',
     `COD_IMOVEL`      BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_FICHA_Imovel` FOREIGN KEY (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_FICHA`) REFERENCES SGI_CRM_ficha_visita (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_FICHA`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX SGI_CRM_Ficha_Imovel_FICHA_IMOVEL
  ON SGI_CRM_ficha_Imovel (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_FICHA`);

CREATE INDEX SGI_CRM_Ficha_Imovel_FBK_FICHA_Imovel
  ON SGI_CRM_ficha_Imovel (`COD_FICHA`, `COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_Processo`;
CREATE TABLE SGI_CRM_Processo
  (
     `COD_PROCESSO`    BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `COD_CLIENTE`     BIGINT NOT NULL,
     `TIPO_PROCESSO`   INT NOT NULL,
     `DATA_INICIO`     DATETIME NOT NULL,
     `DATA_FINAL`      DATETIME NOT NULL,
     `COD_ATENDIMENTO` BIGINT NOT NULL,
     `STATUS`          TINYINT NOT NULL,
     PRIMARY KEY (`COD_PROCESSO`),
     CONSTRAINT `SGI_CRM_Processo_Imovel_PROPOSTA` UNIQUE (`COD_PROCESSO`, `COD_ORIGEM`, `COD_UNIDADE`),
     CONSTRAINT `SGI_CRM_Processo_CLIENTE_PROCESSO` FOREIGN KEY (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Cliente (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_CRM_Processo_ATENDIMENTO_FICHA` FOREIGN KEY (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_CRM_Atendimento (`COD_ATENDIMENTO`, `COD_ORIGEM`, `COD_UNIDADE`)
  );

CREATE INDEX SGI_CRM_Processo_CLIENTE
  ON SGI_CRM_processo (`COD_CLIENTE`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_CRM_processo_tipo`;
CREATE TABLE SGI_CRM_Processo_Tipo
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(150) NULL,
     `ATIVO`     INT NOT NULL,
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Propostas_status`;
CREATE TABLE SGI_CRM_Propostas_Status
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(150) NULL,
     `ATIVO`     TINYINT NOT NULL,
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_Retorno`;
CREATE TABLE SGI_CRM_Retorno
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(45) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_CRM_status`;
CREATE TABLE SGI_CRM_Status
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(45) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_disparo`;
CREATE TABLE SGI_Disparo
  (
     `ID`          BIGINT AUTO_INCREMENT NOT NULL,
     `DATA`        DATETIME NOT NULL,
	 `HORA_INICIO` TIME NOT NULL DEFAULT '00:00:00',
     `LIMITE`      INT NOT NULL DEFAULT '12',
     `DISPARO`     INT NOT NULL,
     `TOTAL_DIA`   INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `DATA` UNIQUE (`DATA`)
  );

DROP TABLE IF EXISTS `SGI_Financeiro_Indicies`;
CREATE TABLE SGI_Financeiro_Indicies
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `SIGLA`     VARCHAR(20) NULL,
     `DESCRICAO` VARCHAR(200) NULL,
     `ATIVO`     TINYINT NOT NULL,
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_imobiliaria`;
CREATE TABLE SGI_Imobiliaria
  (
     `COD_IMOB`        BIGINT AUTO_INCREMENT NOT NULL,
     `DATA_ATIVACAO`   DATETIME NOT NULL,
	 `FILIAL`          BIGINT NOT NULL,
     `INVESTIDOR`      INT NOT NULL,
     `ENVIAR_TABELAS`  INT NOT NULL,
     `NOME_IMOB`       VARCHAR(80) NOT NULL DEFAULT '',
     `RESPONSAVEL`     VARCHAR(80) NULL,
     `CPF`             VARCHAR(18) NOT NULL DEFAULT '000.000.000-00',
     `CNPJ`            VARCHAR(21) NOT NULL DEFAULT '000.000.000/000-00',
     `CRECI`           VARCHAR(20) NULL,
     `VALIDACAO`       VARCHAR(10) NOT NULL DEFAULT '',
     `ENDERECO`        VARCHAR(150) NULL,
     `NUMERO`          VARCHAR(10) NULL,
     `COPLEMENTO`      VARCHAR(50) NULL,
     `BAIRRO`          VARCHAR(100) NULL,
     `CIDADE`          VARCHAR(150) NULL,
     `CEP`             VARCHAR(11) NULL,
     `UF`              VARCHAR(2) NULL,
     `TELEFONE_01`     VARCHAR(18) NOT NULL DEFAULT '(00) 0000-0000',
     `TELEFONE_02`     VARCHAR(18) NOT NULL DEFAULT '(00) 0000-0000',
     `CELULAR_01`      VARCHAR(18) NOT NULL DEFAULT '(00)00000-0000',
     `CELULAR_02`      VARCHAR(18) NOT NULL DEFAULT '(00)00000-0000',
     `WHATSAPP`        VARCHAR(18) NOT NULL DEFAULT '(00)00000-0000',
     `NEXTEL_ID`       VARCHAR(25) NULL,
     `EMAIL_PRINCIPAL` VARCHAR(150) NULL,
     `EMAIL_SITE`      VARCHAR(150) NULL,
     `URL_01`          VARCHAR(200) NULL,
     `URL_02`          VARCHAR(200) NULL,
     `FACEBOOK`        VARCHAR(200) NULL,
     `LINKEDIN`        VARCHAR(200) NULL,
     PRIMARY KEY (`COD_IMOB`),
     CONSTRAINT `SGI_Imobiliaria_IMOB` UNIQUE (`COD_IMOB`, `FILIAL`),
     CONSTRAINT `SGI_Imobiliaria_VALIDACAO` UNIQUE (`VALIDACAO`, `FILIAL`)
  );

DROP TABLE IF EXISTS `SGI_Imobiliaria_imagens`;
CREATE TABLE SGI_Imobiliaria_Imagens
  (
     `ID`       BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOB` BIGINT NOT NULL,
     `LOGO`     LONGBLOB,
     `POSICAO`  INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FKB_IMG_IMOB` FOREIGN KEY (`COD_IMOB`) REFERENCES SGI_imobiliaria (`COD_IMOB`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imobiliaria_filial`;
CREATE TABLE SGI_Imobiliaria_Filial
  (
     `COD_FILIAL`       BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOB`         BIGINT NOT NULL,
     `DESCRICAO_FILIAL` VARCHAR(50) NOT NULL DEFAULT '',
     `DATA_ATIVACAO`    DATETIME NOT NULL,
     `INVESTIDOR`       INT NOT NULL,
     `ENVIAR_TABELAS`   INT NOT NULL,
     `NOME_IMOB`        VARCHAR(45) NOT NULL DEFAULT '',
     `RESPONSAVEL`      VARCHAR(45) NULL,
     `CPF`              VARCHAR(18) NOT NULL DEFAULT '000.000.000-00',
     `CNPJ`             VARCHAR(18) NOT NULL DEFAULT '000.000.000/000-00',
     `CRECI`            VARCHAR(20) NULL,
     `VALIDACAO`        VARCHAR(10) NOT NULL DEFAULT '',
     `ENDERECO`         VARCHAR(150) NULL,
     `NUMERO`           VARCHAR(10) NULL,
     `COPLEMENTO`       VARCHAR(50) NULL,
     `BAIRRO`           VARCHAR(100) NULL,
     `CIDADE`           VARCHAR(150) NULL,
     `CEP`              VARCHAR(11) NULL,
     `UF`               VARCHAR(2) NULL,
     `TELEFONE_01`      VARCHAR(18) NOT NULL DEFAULT '(00) 0000-0000',
     `TELEFONE_02`      VARCHAR(18) NOT NULL DEFAULT '(00) 0000-0000',
     `CELULAR_01`       VARCHAR(18) NOT NULL DEFAULT '(00)00000-0000',
     `CELULAR_02`       VARCHAR(18) NOT NULL DEFAULT '(00)00000-0000',
     `EMAIL_PRINCIPAL`  VARCHAR(150) NULL,
     `EMAIL_SITE`       VARCHAR(150) NULL,
     `URL_01`           VARCHAR(200) NULL,
     `URL_02`           VARCHAR(200) NULL,
     PRIMARY KEY (`COD_FILIAL`),
     CONSTRAINT `SGI_Imobiliaria_Filial_VALIDACAO1` UNIQUE (`VALIDACAO`, `COD_FILIAL`),
     CONSTRAINT `SGI_Imobiliaria_Filial_VALIDACAO2` UNIQUE (`COD_IMOB`, `COD_FILIAL`),
     CONSTRAINT `FBK_IMOB_FILIAL` FOREIGN KEY (`COD_IMOB`) REFERENCES SGI_imobiliaria (`COD_IMOB`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imobiliaria_conf`;
CREATE TABLE SGI_Imobiliaria_conf
  (
     `ID`                 BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOB`           BIGINT NOT NULL,
     `MAIL_HOST`          VARCHAR(200) NULL,
     `MAIL_USER`          VARCHAR(200) NULL,
     `MAIL_SENHA`         VARCHAR(200) NULL,
     `MAIL_PORT`          INT  NOT NULL,
     `MAIL_AUT`           INT NOT NULL,
     `FOTOS`              VARCHAR(200) NULL,
     `THUMB_WIDTH`        INT NOT NULL,
     `THUMB_HEIGTH`       INT NOT NULL,
     `THUMB_SLIDE_WIDTH`  INT NOT NULL,
     `THUMB_SLIDE_HEIGTH` INT NOT NULL,
     `REF_ALTERNATIVA`    INT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imobiliaria_conf_VALIDACAO1` UNIQUE (`COD_IMOB`),
     CONSTRAINT `SGI_Imobiliaria_conf_IMOB` FOREIGN KEY (`COD_IMOB`) REFERENCES SGI_imobiliaria (`COD_IMOB`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Imobiliaria`;
CREATE TABLE SGI_Imovel_Imobiliaria
  (
     `ID`            BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOB`      BIGINT NOT NULL,
     `COD_IMOVEL`    BIGINT NOT NULL,
     `COD_ORIGEM`    BIGINT NOT NULL,
     `COD_UNIDADE`   BIGINT NOT NULL,
     `DATA_CADASTRO` DATETIME NOT NULL,
     `ATIVO`         TINYINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Imobiliaria_VALIDACAO1` UNIQUE (`COD_IMOB`, `COD_IMOVEL`, `COD_UNIDADE`, `COD_ORIGEM`),
     CONSTRAINT `SGI_Imovel_Imobiliaria_IMOB` FOREIGN KEY (`COD_IMOB`) REFERENCES SGI_imobiliaria (`COD_IMOB`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `SGI_Imovel_Imobiliaria_Imovel` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX SGI_Imovel_Imobiliaria_IMOVEL
  ON SGI_Imovel_Imobiliaria (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

CREATE INDEX SGI_Imovel_Imobiliaria_IMOBILIARIA
  ON SGI_Imovel_Imobiliaria (`COD_IMOB`);

CREATE INDEX SGI_Imovel_Imobiliaria_IMOBILIARIA_IMOVEL
  ON SGI_Imovel_Imobiliaria (`COD_IMOB`, `COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_Fotos`;
CREATE TABLE SGI_Imovel_Fotos
  (
     `COD_FOTO`    BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`  BIGINT NOT NULL,
     `COD_ORIGEM`  BIGINT NOT NULL,
     `COD_UNIDADE` BIGINT NOT NULL,
     `TAMANHO`     DOUBLE NOT NULL,
     `NOME`        VARCHAR(20) NOT NULL,
     `ENDERECO`    VARCHAR(150) NOT NULL DEFAULT '',
     `BINARIO`     LONGBLOB NOT NULL,
     `DATA`        DATETIME NOT NULL,
     `DESTAQUE`    TINYINT NOT NULL,
     `EXIBIR`      TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`COD_FOTO`),
     CONSTRAINT `FBK_FOTOS_Imovel` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX FBK_FOTOS_Imovel
  ON SGI_Imovel_Fotos (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_ADM_Pgto`;
CREATE TABLE SGI_Imovel_ADM_Pgto
  (
     `ID`              BIGINT AUTO_INCREMENT NOT NULL,
     `CODIGO_ADM`      BIGINT NOT NULL,
     `COD_IMOVEL`      BIGINT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `ORIGEM`          BIGINT NOT NULL,
     `DATA_INCLUSAO`   DATETIME NULL,
     `DESCRICAO`       VARCHAR(150) NULL,
     `DATA_VENCIMENTO` DATETIME NULL,
     `VALOR`           DECIMAL( 2) NOT NULL DEFAULT '0.00',
     `OBS`             LONGTEXT,
     `USUARIO`         BIGINT NOT NULL,
     `STATUS`          TINYINT NOT NULL,
     `DATA_PAGAMENTO`  DATETIME NULL,
     `FORMA_PGTO`      INT NOT NULL,
     `CONTA`           LONGTEXT,
     `COMPROVANTE`     LONGTEXT,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_ADM_Pgto_VALIDACAO1` UNIQUE (`CODIGO_ADM`, `COD_IMOVEL`, `COD_ORIGEM`),
     CONSTRAINT `FBK_IMOVEL_ADM` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX IMOVEL
  ON SGI_Imovel_ADM_Pgto (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_adm_forma_pgto`;
CREATE TABLE SGI_Imovel_ADM_Forma_Pgto
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(100) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_Imovel_adm_origem`;
CREATE TABLE SGI_Imovel_ADM_Origem
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(150) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_Imovel_adm_status`;
CREATE TABLE SGI_Imovel_ADM_Status
  (
     `ID`        BIGINT AUTO_INCREMENT NOT NULL,
     `DESCRICAO` VARCHAR(100) NULL,
     `ATIVO`     TINYINT NOT NULL DEFAULT '1',
     PRIMARY KEY (`ID`)
  );

DROP TABLE IF EXISTS `SGI_Imovel_composicao`;
CREATE TABLE SGI_Imovel_Composicao
  (
     `ID`          BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`  BIGINT NOT NULL,
     `COD_ORIGEM`  BIGINT NOT NULL,
     `COD_UNIDADE` BIGINT NOT NULL,
     `POSICAO_00`  VARCHAR(50) NULL,
     `POSICAO_01`  VARCHAR(50) NULL,
     `POSICAO_02`  VARCHAR(50) NULL,
     `POSICAO_03`  VARCHAR(50) NULL,
     `POSICAO_04`  VARCHAR(50) NULL,
     `POSICAO_05`  VARCHAR(50) NULL,
     `POSICAO_06`  VARCHAR(50) NULL,
     `POSICAO_07`  VARCHAR(50) NULL,
     `POSICAO_08`  VARCHAR(50) NULL,
     `POSICAO_09`  VARCHAR(50) NULL,
     `POSICAO_10`  VARCHAR(50) NULL,
     `POSICAO_11`  VARCHAR(50) NULL,
     `POSICAO_12`  VARCHAR(50) NULL,
     `POSICAO_13`  VARCHAR(50) NULL,
     `POSICAO_14`  VARCHAR(50) NULL,
     `POSICAO_15`  VARCHAR(50) NULL,
     `POSICAO_16`  VARCHAR(50) NULL,
     `POSICAO_17`  VARCHAR(50) NULL,
     `POSICAO_18`  VARCHAR(50) NULL,
     `POSICAO_19`  VARCHAR(50) NULL,
     `POSICAO_20`  VARCHAR(50) NULL,
     `POSICAO_21`  VARCHAR(50) NULL,
     `POSICAO_22`  VARCHAR(50) NULL,
     `POSICAO_23`  VARCHAR(50) NULL,
     `POSICAO_24`  VARCHAR(50) NULL,
     `POSICAO_25`  VARCHAR(50) NULL,
     `POSICAO_26`  VARCHAR(50) NULL,
     `POSICAO_27`  VARCHAR(50) NULL,
     `POSICAO_28`  VARCHAR(50) NULL,
     `POSICAO_29`  VARCHAR(50) NULL,
     `POSICAO_30`  VARCHAR(50) NULL,
     `POSICAO_31`  VARCHAR(50) NULL,
     `POSICAO_32`  VARCHAR(50) NULL,
     `POSICAO_33`  VARCHAR(50) NULL,
     `POSICAO_34`  VARCHAR(50) NULL,
     `POSICAO_35`  VARCHAR(50) NULL,
     `POSICAO_36`  VARCHAR(50) NULL,
     `POSICAO_37`  VARCHAR(50) NULL,
     `POSICAO_38`  VARCHAR(50) NULL,
     `POSICAO_39`  VARCHAR(50) NULL,
     `POSICAO_40`  VARCHAR(50) NULL,
     `POSICAO_41`  VARCHAR(50) NULL,
     `POSICAO_42`  VARCHAR(50) NULL,
     `POSICAO_43`  VARCHAR(50) NULL,
     `POSICAO_44`  VARCHAR(50) NULL,
     `POSICAO_45`  VARCHAR(50) NULL,
     `POSICAO_46`  VARCHAR(50) NULL,
     `POSICAO_47`  VARCHAR(50) NULL,
     `POSICAO_48`  VARCHAR(50) NULL,
     `POSICAO_49`  VARCHAR(50) NULL,
     `POSICAO_50`  VARCHAR(50) NULL,
     `POSICAO_51`  VARCHAR(50) NULL,
     `POSICAO_52`  VARCHAR(50) NULL,
     `POSICAO_53`  VARCHAR(50) NULL,
     `POSICAO_54`  VARCHAR(50) NULL,
     `POSICAO_55`  VARCHAR(50) NULL,
     `POSICAO_56`  VARCHAR(50) NULL,
     `POSICAO_57`  VARCHAR(50) NULL,
     `POSICAO_58`  VARCHAR(50) NULL,
     `POSICAO_59`  VARCHAR(50) NULL,
     `POSICAO_60`  VARCHAR(50) NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `VALIDACAO1` UNIQUE (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`),
     CONSTRAINT `FBK_Imovel_COMPOSICAO` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_Auxiliar`;
CREATE TABLE SGI_Imovel_Auxiliar
  (
     `ID`                     BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`             BIGINT NOT NULL,
     `COD_ORIGEM`             BIGINT NOT NULL,
     `COD_UNIDADE`            BIGINT NOT NULL,
     `DESOCUPADO`             TINYINT NOT NULL,
     `COM_MORADOR`            TINYINT NOT NULL,
     `COM_INQUILINO`          TINYINT NOT NULL,
     `CONTRATO_EXCLUSIVIDADE` TINYINT NOT NULL,
     `DIAS_EXCLUSIVIDADE`     VARCHAR(30) NOT NULL,
     `TABELA_CONSTRUTOR`      INT NOT NULL,
     `DISTANCIA_PRAIA`        VARCHAR(20) NOT NULL DEFAULT '00.000000000',
     `DISTANCIA_CENTRO`       VARCHAR(20) NOT NULL DEFAULT '00.000000000',
     `DISTANCIA_METRO`        VARCHAR(20) NOT NULL DEFAULT '00.000000000',
     `CONSERVACAO`            BIGINT NOT NULL,
     `ACEITA_PERMUTA`         TINYINT NOT NULL,
     `NAO_ACEITA_PERMUTA`     TINYINT NOT NULL,
     `MAIOR_VALOR`            INT NOT NULL,
     `MENOR_VALOR`            INT NOT NULL,
     `AUTO`                   TINYINT NOT NULL,
     `CASA`                   TINYINT NOT NULL,
     `APTO`                   TINYINT NOT NULL,
     `TERRENO`                TINYINT NOT NULL,
     `REGIAO`                 VARCHAR(100) NULL,
     `CIDADE`                 VARCHAR(100) NULL,
     `OBS_PERMUTA`            LONGTEXT,
     `FIADOR`                 TINYINT NOT NULL,
     `ESCRITURA_FIADOR`       TINYINT NOT NULL,
     `SEGURO_FIANCA`          TINYINT NOT NULL,
     `DEPOSITO`               TINYINT NOT NULL,
     `DEPOSITO_MESES`         INT NOT NULL,
     `ADM_LOCACAO`            INT NOT NULL,
     `OBS_LOCACAO`            LONGTEXT,
     `NUMERO_DIAS`            INT NOT NULL,
     `DIAS_RESERVADOS`        LONGTEXT,
     `FINANCIAMENTO_BANCARIO` TINYINT NOT NULL,
     `MCMV`                   INT NOT NULL,
     `FINANCIAMENTO_DIRETO`   TINYINT NOT NULL,
     `VALOR_ENTRADA`          DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_MENSAIS`            INT NOT NULL,
     `VALOR_MENSAIS`          DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_CHAVES`           DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_TRIMESTRAIS`        INT NOT NULL,
     `VALOR_TRIMESTRAIS`      DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_SEMESTRAIS`         INT NOT NULL,
     `VALOR_SEMESTRAIS`       DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_ANUAIS`             INT NOT NULL,
     `VALOR_ANUAIS`           DOUBLE NOT NULL DEFAULT '0.00',
     `SIGLA_INDICE_DURANTE`   INT NOT NULL,
     `FATOR_DURANTE`          DOUBLE NOT NULL DEFAULT '0.00',
     `SIGLA_INDICE_APOS`      INT NOT NULL,
     `FATOR_APOS`             DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_A_VISTA`          DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_COMPRA`           DOUBLE NOT NULL DEFAULT '0.00',
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Auxiliar_VALIDACAO1` UNIQUE (`COD_IMOVEL`, `COD_UNIDADE`, `COD_ORIGEM`),
     CONSTRAINT `FBK_Imovel_AUX` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX FBK_Imovel_AUX
  ON SGI_Imovel_auxiliar (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_documentos`;
CREATE TABLE SGI_Imovel_documentos
  (
     `COD_DOC`       BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`    BIGINT NOT NULL,
     `COD_ORIGEM`    BIGINT NOT NULL,
     `COD_UNIDADE`   BIGINT NOT NULL,
     `DATA_CADASTRO` DATETIME NOT NULL,
     `DOCUMENTO`     VARCHAR(155) NULL,
     `BINARIO`       LONGBLOB,
     `EXTENSAO`      VARCHAR(5) NULL,
     `COD_USUARIO`   BIGINT  NOT NULL,
     PRIMARY KEY (`COD_DOC`),
     CONSTRAINT `SGI_Imovel_documentos_VALIDACAO1` UNIQUE (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_DOC`),
     CONSTRAINT `FBK_IMOVEL_DOC` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Imovel_email`;
CREATE TABLE SGI_Imovel_email
  (
     `ID`            BIGINT AUTO_INCREMENT NOT NULL,
     `REFERENCIA`    VARCHAR(18) NOT NULL DEFAULT '',
     `COD_IMOVEL`    BIGINT NOT NULL,
     `COD_ORIGEM`    BIGINT NOT NULL,
     `COD_UNIDADE`   BIGINT NOT NULL,
     `DATA_HORA`     DATETIME NOT NULL,
     `EMAIL_ORIGEM`  VARCHAR(150) NOT NULL DEFAULT '',
     `EMAIL_DESTINO` VARCHAR(150) NOT NULL DEFAULT '',
     `OBSERVACAO`    LONGTEXT NOT NULL DEFAULT '',
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_Imovel` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX IMOVEL
  ON SGI_Imovel_email (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_seo`;
CREATE TABLE SGI_Imovel_Seo
  (
     `ID`                  BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`          BIGINT NOT NULL,
     `COD_ORIGEM`          BIGINT NOT NULL,
     `COD_UNIDADE`         BIGINT NOT NULL,
     `MOSTRAR_MAPA_SITE`   INT NOT NULL,
     `MOSTRAR_END_SITE`    INT NOT NULL,
     `DESTAQUE_SITE`       INT NOT NULL,
     `DESTAQUE_BANNER`     INT NOT NULL,
     `OPORTUNIDADE`        INT NOT NULL,
     `PAINEL_TV`           INT NOT NULL,
     `LATITUDE`            VARCHAR(20) NOT NULL DEFAULT '00.000000000',
     `LONGITUDE`           VARCHAR(20) NOT NULL DEFAULT '00.000000000',
     `TITULO_PAGINA`       LONGTEXT,
     `PALAVRAS_CHAVES`     LONGTEXT,
     `META_DESCRIPTION`    LONGTEXT,
     `GERAR_TAGS`          INT NOT NULL,
     `PREPOSICAO_BAIRRO`   VARCHAR(30) NULL,
     `PREPOSICAO_CIDADE`   VARCHAR(30) NULL,
     `CEO_CIDADE`          INT NOT NULL,
     `CEO_BAIRRO`          INT NOT NULL,
     `CEO_ZONA`            INT NOT NULL,
     `GERAR_DESCRICAO`     INT NOT NULL,
     `DESCRICAO_NO_SITE`   LONGTEXT,
     `DESCRICAO_INTERNA`   LONGTEXT,
     `DESCRICAO_EM_INGLES` LONGTEXT,
     `YOUTUBE`             VARCHAR(255) NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_seo_VALIDACAO1` UNIQUE (`COD_IMOVEL`, `COD_UNIDADE`, `COD_ORIGEM`),
     CONSTRAINT `FBK_Imovel_SEO` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX FBK_Imovel_SEO
  ON SGI_Imovel_seo (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_temporada`;
CREATE TABLE SGI_Imovel_Temporada
  (
     `ID`                     BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`             BIGINT NOT NULL,
     `COD_ORIGEM`             BIGINT NOT NULL,
     `COD_UNIDADE`            BIGINT NOT NULL,
     `QTD_DIAS_BAIXA`         INT NOT NULL,
     `VALOR_DIARIA_BAIXA`     DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_NATAL`         INT NOT NULL,
     `VALOR_DIARIA_NATAL`     DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_REV`           INT NOT NULL,
     `VALOR_DIARIA_REV`       DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_DATAS`         INT NOT NULL,
     `VALOR_DIARIA_DATAS`     DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_NATAL_REV`     INT NOT NULL,
     `VALOR_DIARIA_NATAL_REV` DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_TEMP`          INT NOT NULL,
     `VALOR_DIARIA_TEMP`      DOUBLE NOT NULL DEFAULT '0.00',
     `QTD_DIAS_CARNAVAL`      INT NOT NULL,
     `VALOR_DIARIA_CARNAVAL`  DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_CAUCAO`           DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_LIMPEZA`          DOUBLE NOT NULL DEFAULT '0.00',
     `VALOR_ADM`              DOUBLE NOT NULL DEFAULT '0.00',
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Temporada_VALIDACAO1` UNIQUE (`COD_IMOVEL`, `COD_UNIDADE`, `COD_ORIGEM`),
     CONSTRAINT `FBK_Imovel_TEMPORADA` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX FBK_Imovel_TEMPORADA
  ON SGI_Imovel_temporada (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imovel_venda`;
CREATE TABLE SGI_Imovel_Venda
  (
     `ID`          BIGINT AUTO_INCREMENT NOT NULL,
     `COD_IMOVEL`  BIGINT NOT NULL,
     `COD_ORIGEM`  BIGINT NOT NULL,
     `COD_UNIDADE` BIGINT NOT NULL,
     `DATA_VENDA`  DATETIME NOT NULL,
     `USUARIO`     BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Venda_UQ` UNIQUE (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`),
     CONSTRAINT `SGI_Imovel_Venda_Imovel_VENDA` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Pessoa`;
CREATE TABLE SGI_Pessoa
  (
     `COD_PESSOA`      BIGINT AUTO_INCREMENT NOT NULL,
     `COD_ORIGEM`      BIGINT NOT NULL,
     `COD_UNIDADE`     BIGINT NOT NULL,
     `DATA_CADASTRO`   DATETIME NOT NULL,
     `DATA_ALTERADO`   DATETIME NULL,
     `ANIVERSARIO`     DATETIME NULL,
     `TIPO`            INT NOT NULL,
     `NOME`            VARCHAR(80) NOT NULL DEFAULT 'NOME',
     `FANTASIA`        VARCHAR(60) NULL,
     `ENDERECO`        VARCHAR(150) NOT NULL DEFAULT 'ENDERECO',
     `NUMERO`          VARCHAR(20) NULL,
     `COMPLEMENTO`     VARCHAR(50) NULL,
     `REFERENCIA`      VARCHAR(50) NULL,
     `BAIRRO`          VARCHAR(80) NOT NULL DEFAULT 'BAIRRO',
     `CIDADE`          VARCHAR(80) NOT NULL DEFAULT 'CIDADE',
     `UF`              VARCHAR(2) NOT NULL DEFAULT 'UF',
     `CEP`             VARCHAR(15) NOT NULL DEFAULT '00.000-000',
     `CNPJCPF`         VARCHAR(20) NOT NULL DEFAULT '000.000.000-00',
     `IERG`            VARCHAR(20) NULL,
     `TEL_RESISENCIAL` VARCHAR(20) DEFAULT '(00) 0000-0000',
     `TEL_COMERCIAL`   VARCHAR(20) DEFAULT '(00) 0000-0000',
     `CELULAR_01`      VARCHAR(20) DEFAULT '(00) 00000-0000',
     `CELULAR_02`      VARCHAR(20) DEFAULT '(00) 00000-0000',
     `WHATSAPP`        VARCHAR(20) DEFAULT '(00) 00000-0000',
     `NEXTEL`          VARCHAR(20) NOT NULL DEFAULT '00*00*0000',
     `EMAIL_01`        VARCHAR(80) NULL,
     `EMAIL_02`        VARCHAR(80) NULL,
     `OBS`             LONGTEXT,
     `ATIVO`           INT NOT NULL DEFAULT '1',
     `CORRETOR`        TINYINT NOT NULL DEFAULT '0',
     `CRECI`           VARCHAR(80) NULL,
     PRIMARY KEY (`COD_PESSOA`),
     CONSTRAINT `SGI_Pessoa_VALIDACAO1` UNIQUE (`COD_PESSOA`, `COD_UNIDADE`, `COD_ORIGEM`)
  );

CREATE INDEX SGI_Pessoa_DATA
  ON SGI_pessoa (`DATA_CADASTRO`);

CREATE INDEX SGI_Pessoa_CNPJCPF
  ON SGI_pessoa (`CNPJCPF`);

DROP TABLE IF EXISTS `SGI_Imovel_Proprietario`;
CREATE TABLE SGI_Imovel_Proprietario
  (
     `ID`             BIGINT AUTO_INCREMENT NOT NULL,
     `COD_PESSOA`     BIGINT NOT NULL,
     `COD_IMOVEL`     BIGINT NOT NULL,
     `COD_ORIGEM`     BIGINT NOT NULL,
     `COD_UNIDADE`    BIGINT NOT NULL,
     `DATA_CADASTRO`  DATETIME NOT NULL,
     `INVESTIDOR`     TINYINT NOT NULL,
     `DATA_ALTERACAO` DATETIME NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `SGI_Imovel_Proprietario_VALIDACAO1` UNIQUE (`COD_PESSOA`, `COD_ORIGEM`, `COD_UNIDADE`, `COD_IMOVEL`),
     CONSTRAINT `FBK_PROPRIETARIO_Imovel` FOREIGN KEY (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) REFERENCES SGI_Imovel (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `FBK_PROPRIETARIO_PESSOA` FOREIGN KEY (`COD_PESSOA`) REFERENCES SGI_Pessoa (`COD_PESSOA`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX FBK_PROPRIETARIO_Imovel
  ON SGI_Imovel_Proprietario (`COD_IMOVEL`, `COD_ORIGEM`, `COD_UNIDADE`);

DROP TABLE IF EXISTS `SGI_Imobiliaria_Corretor`;
CREATE TABLE SGI_Imobiliaria_Corretor
  (
     `COD_CORRETOR`  BIGINT AUTO_INCREMENT NOT NULL,
     `ATIVO`         INT NOT NULL,
     `COD_PESSOA`    BIGINT NOT NULL,
     `COD_IMOB`      BIGINT NOT NULL,
     `DATA_CADASTRO` DATETIME NOT NULL,
     PRIMARY KEY (`COD_CORRETOR`),
     CONSTRAINT `SGI_Imobiliaria_Corretor_VALIDACAO1` UNIQUE (`COD_PESSOA`, `COD_IMOB`),
     CONSTRAINT `FBK_CORRETOR_PESSOA` FOREIGN KEY (`COD_PESSOA`) REFERENCES SGI_Pessoa (`COD_PESSOA`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `FBK_CORRETOR_IMOBILIARIA` FOREIGN KEY (`COD_IMOB`) REFERENCES SGI_Imobiliaria (`COD_IMOB`) ON DELETE CASCADE ON UPDATE CASCADE
  );

DROP TABLE IF EXISTS `SGI_Usuarios`;
CREATE TABLE SGI_Usuarios
  (
     `COD_USUARIO`   BIGINT AUTO_INCREMENT NOT NULL,
     `COD_PESSOA`    BIGINT NOT NULL,
     `DATA_CADASTRO` DATETIME NOT NULL,
     `USER_NAME`     VARCHAR(30) NOT NULL DEFAULT 'USER_NAME',
     `SENHA`         VARCHAR(30) NOT NULL DEFAULT 'SENHA',
     `USER_EMAIL`    VARCHAR(150) NOT NULL DEFAULT 'USER_NAME@SOMINIO.COM.BR',
     `ATIVO`         INT NOT NULL,
     PRIMARY KEY (`COD_USUARIO`),
     CONSTRAINT `FBK_USUARIO_PESSOA` FOREIGN KEY (`COD_PESSOA`) REFERENCES SGI_Pessoa (`COD_PESSOA`) ON DELETE CASCADE ON UPDATE CASCADE
  );

CREATE INDEX CORRETOR
  ON SGI_usuarios (`COD_PESSOA`);

DROP TABLE IF EXISTS `SGI_Perfil`;
CREATE TABLE SGI_Perfil
  (
     `COD_PERFIL`  BIGINT AUTO_INCREMENT NOT NULL,
     `NOME_PERFIL` VARCHAR(150) NOT NULL DEFAULT 'NOME PERFIL',
     `ORDEM`       INT NULL,
     PRIMARY KEY (`COD_PERFIL`)
  );

DROP TABLE IF EXISTS `SGI_Usuario_Perfil`;
CREATE TABLE SGI_Usuario_Perfil
  (
     `ID`          BIGINT AUTO_INCREMENT NOT NULL,
     `COD_PERFIL`  BIGINT NOT NULL,
     `COD_USUARIO` BIGINT NOT NULL,
     PRIMARY KEY (`ID`),
     CONSTRAINT `FBK_PERFIL` FOREIGN KEY (`COD_PERFIL`) REFERENCES SGI_Perfil (`COD_PERFIL`) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT `FBK_USUARIO` FOREIGN KEY (`COD_USUARIO`) REFERENCES SGI_Usuarios (`COD_USUARIO`) ON DELETE CASCADE ON UPDATE CASCADE
  ); 


 INSERT INTO `sgi_pessoa` (`COD_PESSOA`, `COD_ORIGEM`, `COD_UNIDADE`, `DATA_CADASTRO`, `DATA_ALTERADO`, `ANIVERSARIO`, `TIPO`, `NOME`, `FANTASIA`, `ENDERECO`, `NUMERO`, `COMPLEMENTO`, `REFERENCIA`, `BAIRRO`, `CIDADE`, `UF`, `CEP`, `CNPJCPF`, `IERG`, `TEL_RESISENCIAL`, `TEL_COMERCIAL`, `CELULAR_01`, `CELULAR_02`, `WHATSAPP`, `NEXTEL`, `EMAIL_01`, `EMAIL_02`, `OBS`, `ATIVO`, `CORRETOR`, `CRECI`) VALUES (NULL, '0', '0', '2018-08-22 00:00:00', NULL, '1983-07-28 00:00:00', '0', 'AFONSO DUTRA NOGUEIRA FILHO', NULL, 'RUA TAGUA', '305', 'APTO 2202', 'RUA FEIRA', 'LIBERDADE', 'SÃO PAULO', 'SP', '08.010-015', '304.237.058-57', NULL, '(00) 0000-0000', '(00) 0000-0000', '(11) 98536-8545', '(00) 00000-0000', '(00) 00000-0000', '00*00*0000', 'AFONSOFT@GMAIL.COM', NULL, NULL, '1', '0', NULL); 
 INSERT INTO `sgi_usuarios` (`COD_USUARIO`, `COD_PESSOA`, `DATA_CADASTRO`, `USER_NAME`, `SENHA`, `USER_EMAIL`, `ATIVO`) VALUES (NULL, '1', CURRENT_DATE(), 'afonsoft', 'r5q9y6t2', 'afonsoft@gmail.com', '1');
 
  
INSERT INTO SGI_AUX_Acabamentos VALUES ('Carpete de Madeira',1),('Carpete',1),('Piso Frio',1),('Porcelanato',1),('Mármore',1),('Granito',1),('Ardósia',1),('Contra Piso',1),('Gramado',1),('Papel de Parede',1),('Pintura Latex',1),('Textura',1),('Azulejo até o Teto',1),('Cerâmica na Fachada',1),('Portão de Madeira',1),('Portão de Alumínio',1),('Janelas de Madeira',1),('Janelas de Alumínio',1),('Semi-acabado',1),('Decorado',1),('Semi-mobiliado',1),('Mobiliado',1);
INSERT INTO SGI_AUX_Caracteristicas VALUES ('Cozinha Americana',1),('Copa',1),('Churrasqueira na Sacada',1),('Dep. de Empregada',1),('Hidromassagem',1),('Box Blindex',1),('Cozinha Planejada',1),('Dormtório Planejado',1),('Closet',1),('Sacada Envidraçada',1),('Sala de TV',1),('Sala de Jantar',1),('Lareira',1),('Andar Alto',1),('Vista para o Mar',1),('Vista para a Piscina',1),('Vista para o Fundos',1);
INSERT INTO SGI_AUX_Caracteristicas_Predio_Casa VALUES ('Elevador Social',1),('Elevador de Serviço',1),('Acessibilidade',1),('Garagem Privativa',1),('Portão Automático',1),('Portaria 24h',1),('Interfone',1),('Circuito Fechado TV',1),('Água Individual',1),('Gás Encanado',1),('Home Box',1),('Pay per Use',1),('Manobrista',1),('Office/Sala Reunião',1),('Lavanderia',1),('Piscina Aquecida',1),('Piscina',1),('Piscina Infantil',1),('Piscina com Raia',1),('Sauna',1),('Salão de Jogos',1),('Salão de Festas',1),('Quadra',1),('Espaço Kids',1),('Serviço de Praia',1),('Garage Band',1),('Espaço Gourmet',1),('Cinema',1),('Academia',1),('Churrasqueira',1),('Predio Frente Mar',1),('Pet Care',1),('Lavanderia',1);
INSERT INTO SGI_AUX_Conservacao VALUES ('NÃO INFORMADO',1),('NOVO',1),('REFORMADO',1),('BOM',1),('NECESSITA REFORMA',1),('NECESSITA DEMOLIÇÃO',1);
INSERT INTO SGI_AUX_Posicao VALUES ('ESCOLHA',1),('FRENTE',1),('FUNDOS',1),('LATERAL',1);
INSERT INTO SGI_Imovel_Motivo_Venda VALUES ('NAO INFORMADO',1),('COMPRAR IMOVEL MELHOR MESMA CIDADE',1),('COMPRAR IMOVEL MENOR MESMA CIDADE',1),('COMPRAR IMOVEL MELHOR EM OUTRA CIDADE',1),('COMPRAR IMOVEL MENOR EM OUTRA CIDADE',1);
INSERT INTO SGI_CRM_operadora VALUES ('ESCOLHA',1),('VIVO',1),('CLARO',1),('TIM',1),('NEXTEL',1),('OI',1), ('OUTRA', 1);
INSERT INTO SGI_AUX_Sub_Tipo VALUES ('Kitinete',1,2,1),('Loft/Studio',5,2,1),('Cobertura',2,2,1),('Duplex',8,2,1),('Triplex',9,2,1),('1 Por Andar',7,2,1),('Flat',4,2,1),('Terreo',3,2,1),('Sem Condomínio',6,2,1),('Alto Padrão',11,2,1),('Lazer & Conforto',10,2,0),('Isolada',3,1,1),('Geminada',4,1,1),('Esquina',5,1,1),('Esquina',1,3,1),('Condominio Fechado',7,1,1),('Condominio Fechado',3,3,1),('Loteamento Fechado',2,3,1),('Loteamento Fechado',9,1,1),('Salão',1,5,1),('Conjunto',2,5,1),('Sitio',1,4,1),('Fazenda',2,4,1),('Chácara',4,4,1),('Haras',3,4,1),('Galpão',1,6,1),('Térrea',1,1,1),('Sobrado',2,1,1),('Semi Isolada',11,1,1),('Sobreposta Alta',12,1,1),('Sobreposta Baixa',13,1,1),('Edicula',6,1,1),('Vila',14,1,1),('Condominio',8,1,1),('Villagio',10,1,1),('Penthouse',12,2,1);
INSERT INTO SGI_CRM_atendimento_encerramento VALUES ('ESCOLHA',1),('VENDA CONCLUÍDA',1),('CLIENTE DESISTIU',1),('FINANCIAMENTO RECUSADO',1),('PROBLEMAS NA DOCUMENTAÇÃO DO IMÓVEL',1);
INSERT INTO SGI_CRM_contato VALUES ('ESCOLHA',1),('E-MAIL',1),('TELEFONE',1),('WHATSAPP',1),('IMOBILIÁRIA',1),('AT ON LINE',1);
INSERT INTO SGI_CRM_expectativa VALUES ('ESCOLHA',1),('ALTA',1),('MEDIA',1),('BAIXA',1);
INSERT INTO SGI_CRM_processo_tipo VALUES ('ESCOLHA',1),('VENDA DE IMÓVEL',1),('ALUGUEL',1);
INSERT INTO SGI_CRM_propostas_status VALUES ('ESCOLHA',1),('AGUARDANDO APROVAÇÃO',1),('REVISÃO',1),('REPROVADA',1),('APROVADA',1);
INSERT INTO SGI_CRM_retorno VALUES ('ESCOLHA',1),('RETORNAR POR E-MAIL',1),('RETORNAR POR TELEFONE',1),('AGUARDAR CLIENTE NA IMOBILIÁRIA',1),('VISITAR CLIENTE',1),('VISITAR IMÓVEL',1),('WHATSAPP',1);
INSERT INTO SGI_CRM_status VALUES ('ESCOLHA',1),('PENDENTE CLIENTE',1),('PENDENTE CORRETOR',1),('POS VENDA',1),('PROCURANDO IMOVEL',1),('PENDENTE PROPOSTA',1),('DESISITENCIA',1),('FINALIZADO',1);
INSERT INTO SGI_Imovel_adm_forma_pgto VALUES ('ESCOLHA',1),('DINHEIRO',1),('CARTÃO',1),('INTERNET BANK',1),('LOTERICA',1),('DEBITO EM CONTA',1),('CHEQUE',1);
INSERT INTO SGI_Imovel_adm_origem VALUES ('ESCOLHA',1),('ENERGIA ELETRICA',1),('AGUA E ESGOTO',1),('IPTU',1),('CONDOMINIO',1),('ADMINISTRAÇÃO',1);
INSERT INTO SGI_Imovel_adm_status VALUES ('ESCOLHA',1),('EM ABERTO',1),('VENCIDA',1),('QUITADA',1),('CANCELADA',1);
INSERT INTO SGI_financeiro_indicies VALUES ('ESCOLHA','ESCOLHA',1),('INCC','INDICIE NACIONAL CONTRUÇÃO CIVIL',1),('POUPANÇA','POUPANÇA',1),('IGPM','INDICIE RERAL DE PREÇOS MEDIO',1),('IPCA','INDICIE DE PREÇO CONSUMINDOR AMPLO',1),('TR','TAXA REFERENCIAL',1);
INSERT INTO SGI_AUX_Tipo VALUES ('ESCOLHA',1),('CASA',1),('APARTAMENTO',1),('TERRENO',1),('RURAL',1),('COMERCIAL',1),('INDUSTRIAL',1);
INSERT INTO SGI_AUX_Composicao VALUES ('Dormitórios',1,1,1),('Dormitórios',1,1,2),('Suíte',2,1,1),('Suíte',2,1,2),('Banheiro',4,1,1),('Banheiro',4,1,2),('Salas',6,1,1),('Salas',7,1,2),('Salas',4,1,5),('Vagas',3,1,2),('V. Estacionamento',2,1,5),('Vagas',3,1,1),('Lavabo',5,1,1),('Lavabo',6,1,2),('Sacadas',7,1,5),('Sacadas',5,1,2),('Banheiro',3,1,5),('Portas',1,1,5),('Computadores',6,1,5),('Ar Condicionado',7,1,5),('Mesas e Cadeiras',10,1,5),('Televisores',9,1,5),('Telefones',5,1,5),('Geladeiras',8,1,5),('Pé Direito (mts)',1,1,6),('Portas',2,1,6),('Altura Porta (mts)',3,1,6),('Docas',5,1,6),('Refeitorios',10,1,6),('Vestiarios',7,1,6),('Banheiro',6,1,6),('Salas Escritórios',8,1,6),('Vagas Estacionamento',4,1,6),('Portarias',9,1,6),('Casas',1,1,4),('Dorms Casa Sede',2,1,4),('Banheiro',6,0,1),('Estábulos',4,1,4),('Pasto (metros)',9,1,4),('Divições de Pastos',5,1,4),('Poços Artesianos',7,1,4),('Tanques de Peixes',3,1,4),('Silos',6,1,4),('Cocheiras',8,1,4);

